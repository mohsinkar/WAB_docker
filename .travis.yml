sudo: required
services:
  - docker

before_install:
  - docker build -t mohsinkarim/wab-docker -f Dockerfile.dev .

script: 'true'

after_success:
  - docker build -t mohsinkarim/wab-image .
 
  - echo "$pd" | docker login -u "$user" --password-stdin

  - docker push mohsinkarim/wab-image


notifications:
  email: false    # default notification method
  slack:
    rooms:
      - devopstester:dV8Xf6qFOUIkXiAQZU6w1zfM#devops
    on_success: always  # change: send a notification when the build status changes.
    on_failure: always  # always: always send a notification.
    template:
      - "Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>) for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`."
      - "Execution time: *%{duration}*"
      - "Message: %{message}"
 
deploy:
  - provider: elasticbeanstalk
    region: "us-east-1"
    app: "wab-docker-prod"
    env: "WabDockerProd-env"
    bucket_name: "elasticbeanstalk-us-east-1-778904096101"
    bucket_path: "wab-docker-prod"
    on:
      branch: master
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:
      secure: "$Secret"
  - provider: elasticbeanstalk
    region: "us-east-1"
    app: "wab-docker-prod"
    env: "WabDockerTest"
    bucket_name: "elasticbeanstalk-us-east-1-778904096101"
    bucket_path: "WabDockerTest"
    on:
      branch: testing
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:
      secure: "$Secret"
  - provider: elasticbeanstalk
    region: "us-east-1"
    app: "wab-docker-prod"
    env: "WabDockerDevelopment "
    bucket_name: "elasticbeanstalk-us-east-1-778904096101"
    bucket_path: "WabDockerDevelopment"
    on:
      branch: development
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:
      secure: "$Secret"